package com.main.javaBased;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

import javax.crypto.Cipher;

public class Application {

	public static void main(String[] args) {
		ApplicationContext ctx = 
			      new AnnotationConfigApplicationContext(BeansCaller.class);
			   
			      HelloSpringAnnotation helloSpringAnnotation = ctx.getBean(HelloSpringAnnotation.class);

			      helloSpringAnnotation.setMessage("Hello Spring Java Annotations!");
			      helloSpringAnnotation.getMessage();
			      
			      LargestNum largestNum = ctx.getBean(LargestNum.class);
			      System.out.println(largestNum.getLargestNum(largestNum.permutationFinder("79200")));
			      
			      //Use of javax.crypto.Cipher;
			      try {
			    	  //Initialize the secure random generator
			    	  SecureRandom secureRandom = SecureRandom.getInstance("SHA1PRNG");
			    	  
			    	  //Method1: calling nextBytes method to generate Random Bytes
			    	  byte[] bytes = new byte[512];
			    	  secureRandom.nextBytes(bytes);
			    	  
			    	  //Printing the secureRandom number by calling secureRandom.nextDouble()
			    	  System.out.println("Secure Random # generated by calling nextBytes() is " + secureRandom.nextDouble());
			    	  
			    	  //Method2: using setsSeed(byte[]) to reseed the Random object
			    	  int seedByteCount = 10;
			    	  byte[] seed = secureRandom.generateSeed(seedByteCount);			    	  
			    	  secureRandom.setSeed(seed);
			    	  
			    	  System.out.println("Secure Random # generated using setSeed(byte[]) is " + secureRandom.nextDouble());
			      } catch(NoSuchAlgorithmException noSuchAlgo) {
			    	  System.out.println("No such algorithms exist " + noSuchAlgo);
			      }
	}

}